//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace LeaderBoardClient.ServiceReference {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ServiceReference.IService")]
    public interface IService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/createPublicContest", ReplyAction="http://tempuri.org/IService/createPublicContestResponse")]
        int createPublicContest();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/createPublicContest", ReplyAction="http://tempuri.org/IService/createPublicContestResponse")]
        System.Threading.Tasks.Task<int> createPublicContestAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/createPrivateContest", ReplyAction="http://tempuri.org/IService/createPrivateContestResponse")]
        int createPrivateContest();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/createPrivateContest", ReplyAction="http://tempuri.org/IService/createPrivateContestResponse")]
        System.Threading.Tasks.Task<int> createPrivateContestAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/geAllPubicContest", ReplyAction="http://tempuri.org/IService/geAllPubicContestResponse")]
        int[] geAllPubicContest();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/geAllPubicContest", ReplyAction="http://tempuri.org/IService/geAllPubicContestResponse")]
        System.Threading.Tasks.Task<int[]> geAllPubicContestAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/geAllPrivateContest", ReplyAction="http://tempuri.org/IService/geAllPrivateContestResponse")]
        int[] geAllPrivateContest();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/geAllPrivateContest", ReplyAction="http://tempuri.org/IService/geAllPrivateContestResponse")]
        System.Threading.Tasks.Task<int[]> geAllPrivateContestAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/getContest", ReplyAction="http://tempuri.org/IService/getContestResponse")]
        int getContest();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/getContest", ReplyAction="http://tempuri.org/IService/getContestResponse")]
        System.Threading.Tasks.Task<int> getContestAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/UpdateContest", ReplyAction="http://tempuri.org/IService/UpdateContestResponse")]
        int UpdateContest();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/UpdateContest", ReplyAction="http://tempuri.org/IService/UpdateContestResponse")]
        System.Threading.Tasks.Task<int> UpdateContestAsync();
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IServiceChannel : LeaderBoardClient.ServiceReference.IService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ServiceClient : System.ServiceModel.ClientBase<LeaderBoardClient.ServiceReference.IService>, LeaderBoardClient.ServiceReference.IService {
        
        public ServiceClient() {
        }
        
        public ServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public ServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public int createPublicContest() {
            return base.Channel.createPublicContest();
        }
        
        public System.Threading.Tasks.Task<int> createPublicContestAsync() {
            return base.Channel.createPublicContestAsync();
        }
        
        public int createPrivateContest() {
            return base.Channel.createPrivateContest();
        }
        
        public System.Threading.Tasks.Task<int> createPrivateContestAsync() {
            return base.Channel.createPrivateContestAsync();
        }
        
        public int[] geAllPubicContest() {
            return base.Channel.geAllPubicContest();
        }
        
        public System.Threading.Tasks.Task<int[]> geAllPubicContestAsync() {
            return base.Channel.geAllPubicContestAsync();
        }
        
        public int[] geAllPrivateContest() {
            return base.Channel.geAllPrivateContest();
        }
        
        public System.Threading.Tasks.Task<int[]> geAllPrivateContestAsync() {
            return base.Channel.geAllPrivateContestAsync();
        }
        
        public int getContest() {
            return base.Channel.getContest();
        }
        
        public System.Threading.Tasks.Task<int> getContestAsync() {
            return base.Channel.getContestAsync();
        }
        
        public int UpdateContest() {
            return base.Channel.UpdateContest();
        }
        
        public System.Threading.Tasks.Task<int> UpdateContestAsync() {
            return base.Channel.UpdateContestAsync();
        }
    }
}
